//
//  TaskListPresenterTests.swift
//  ToDoList
//
//  Created by –ù–∏–∫–æ–ª–∞–π –ì—Ä–∏–Ω—å–∫–æ on 27.03.2025.
//

import XCTest
@testable import ToDoList // ‚úÖ –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–æ–¥ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

final class TaskListPresenterTests: XCTestCase {
    
    var presenter: TaskListPresenter!
    var mockView: MockTaskListView!
    
    override func setUp() {
        super.setUp()
        mockView = MockTaskListView()
        presenter = TaskListPresenter()
        presenter.view = mockView
    }
    
    override func tearDown() {
        presenter = nil
        mockView = nil
        super.tearDown()
    }

    func testExample() {
           XCTAssertEqual(2 + 2, 4, "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ —Å–ª–æ–º–∞–ª–∞—Å—å ü§Ø")
       }
    
    func testPresenter_WhenFetchingTasks_ViewShouldShowTasks() {
        // ‚úÖ –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        let task = [TaskEntity(id: 1, todo: "Test Task", completed: false, createdAt: Date(), userId: 1)]

        // ‚úÖ –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ —É presenter
        presenter.didLoadTasks(task)

        // ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ View –ø–æ–ª—É—á–∏–ª–∞ –∑–∞–¥–∞—á–∏
        XCTAssertEqual(mockView.tasks.count, 1)
        XCTAssertEqual(mockView.tasks.first?.todo, "Test Task")
    }
}

// ‚úÖ –ú–æ–∫ –¥–ª—è TaskListView
final class MockTaskListView: TaskListViewProtocol {
    var presenter: TaskListPresenterProtocol?
    var tasks: [TaskEntity] = []

    func showTasks(_ tasks: [TaskEntity]) {
        self.tasks = tasks
    }
}
